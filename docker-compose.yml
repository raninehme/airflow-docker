version: '3.8'

x-common: &common
  build:
    context: .
  user: "${AIRFLOW_UID}:0"
  environment:
      AIRFLOW__WEBSERVER__INSTANCE_NAME: ${PROJECT_NAME:-}
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./common:/opt/airflow/common

x-depends-on: &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

services:
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "6432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - postgres-airflow:/var/lib/postgresql/data

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 15s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/common
        chown -R "${AIRFLOW_UID}:0" /sources/{logs, dags, common}
        exec /entrypoint airflow version

volumes:
  postgres-airflow: