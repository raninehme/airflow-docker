version: '3.8'

# Define common configuration for Airflow containers
x-airflow: &airflow
  build:
    context: .
  user: "${AIRFLOW_UID}:0"
  environment:
      AIRFLOW__WEBSERVER__INSTANCE_NAME: ${PROJECT_NAME:-}
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./utils:/opt/airflow/utils

# Define common dependencies for Airflow containers
x-airflow-deps: &airflow-deps
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully

# Define services (containers)
services:
  # PostgresSQL database container
  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "airflow" ]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: .env
    volumes:
      - postgres:/var/lib/postgresql/data

  # Airflow scheduler container
  airflow-scheduler:
    <<: *airflow
    <<: *airflow-deps
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "${SCHEDULER_PORT}:8793"

  # Airflow webserver container
  airflow-webserver:
    <<: *airflow
    <<: *airflow-deps
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "${WEBSERVER_PORT}:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8080/health" ]
      interval: 15s
      timeout: 30s
      retries: 5

  # Airflow initialization container
  airflow-init:
    <<: *airflow
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        # Create necessary directories and set permissions
        mkdir -p /sources/logs /sources/dags /sources/utils
        chown -R "${AIRFLOW_UID}:0" /sources/{logs, dags, utils}
        exec /entrypoint airflow version

volumes:
  postgres: